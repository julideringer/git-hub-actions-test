name: Deploy Lambda Functions

on:
  push:
    branches:
      - main
      - develop

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v2
      with:
        fetch-depth: 2

    - name: Print changed files
      run: |
        echo "List of changed files:" 
        echo $(git diff --name-only HEAD^ HEAD)

    - name: Set AWS Credentials Based on Branch
      if: github.ref == 'refs/heads/main' # Para producción
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}

    - name: Set AWS Credentials Based on Branch
      if: github.ref == 'refs/heads/develop' # Para desarrollo
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID_DEV }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY_DEV }}
        aws-region: ${{ secrets.AWS_REGION_DEV }}

    - name: Install Dependencies
      run: |
        pip install flake8 black pytest pytest-cov coverage

    - name: Find and Deploy Changed Lambda Functions
      run: |
        changed_lambdas=$(git diff --name-only HEAD^ HEAD | grep '^src/' | grep '\.py$' | uniq)
        echo "Changed Lambda Files: $changed_lambdas"
        
        for lambda_file in $changed_lambdas; do
          function_name=$(basename $lambda_file .py)  # Extrae el nombre del archivo como nombre de la lambda
          zip_file_name=${function_name}.zip

          echo "Changes detected in Lambda function: $function_name"
          # Navegar a la carpeta donde está el archivo
          file_dir=$(dirname $lambda_file)
          cd $file_dir
          zip -r ../../$zip_file_name .
          cd ../../

          # Comprobar si la Lambda ya existe
          lambda_exists=$(aws lambda get-function --function-name $function_name 2>&1 || echo "not-found")
          if [[ $lambda_exists == *"not-found"* ]]; then
            echo "Lambda function $function_name does not exist, creating it..."
            aws lambda create-function \
              --function-name $function_name \
              --runtime python3.10 \
              --role arn:aws:iam::682033485736:role/service-role/publish_trips_test-role-x5pm6b8b \
              --handler $(basename $lambda_file .py).lambda_handler \
              --zip-file fileb://$zip_file_name \
              --timeout 10 \
              --memory-size 128
          else
            echo "Lambda function $function_name exists, updating it..."
            aws lambda update-function-code --function-name $function_name --zip-file fileb://$zip_file_name
          fi

          # Limpiar archivos temporales
          rm $zip_file_name
        done
