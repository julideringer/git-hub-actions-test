name: Deploy Lambda Functions

on:
  push:
    branches:
      - main
      - develop

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v2
      with:
        fetch-depth: 2

    - name: Print changed files
      run: |
        echo "List of changed files:" 
        echo $(git diff --name-only HEAD^ HEAD)

    - name: Set AWS Credentials Based on Branch
      if: github.ref == 'refs/heads/main' # Para producción
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}

    - name: Set AWS Credentials Based on Branch
      if: github.ref == 'refs/heads/develop' # Para desarrollo
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID_DEV }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY_DEV }}
        aws-region: ${{ secrets.AWS_REGION_DEV }}

    - name: Install Dependencies
      run: |
        pip install flake8 black pytest pytest-cov coverage

    - name: Create ZIPs for Lambda functions
      run: |
              # Inicializa un array para almacenar los nombres de los archivos ZIP creados
              zip_files=()
              
              # Función para crear ZIPs de funciones Lambda en un directorio dado
              create_zip_files() {
                  local dir=$1
                  cd $dir
      
                  # Recorre todos los archivos .py en el directorio
                  for lambda_file in *.py; do
                    # Extrae el nombre del archivo sin la extensión .py
                    function_name=$(basename $lambda_file .py)
      
                    # Cambia el nombre del archivo a lambda_function.py temporalmente
                    mv $lambda_file lambda_function.py
                    
                    # Crea el archivo ZIP con el nombre de la función
                    zip -r ../${function_name}.zip lambda_function.py
                    
                    # Devuelve el archivo a su nombre original
                    mv lambda_function.py $lambda_file
                    
                    # Agrega el nombre del ZIP al array
                    zip_files+=("${function_name}.zip")
                    
                    echo "Creado ZIP para $function_name en $dir"
                  done
      
                  # Verificar que los archivos ZIP se crearon correctamente
                  ls -l ../
              }
      
              # Crear ZIPs en los directorios 'src/trips' y 'src/routines'
              create_zip_files "src/trips"
              create_zip_files "src/routines"
      
    - name: Check and Create/Update Lambda functions
      run: |
              # Función para verificar y crear funciones Lambda
              check_and_create_lambda() {
                  local dir=$1
                  cd $dir
      
                  # Recorre todos los archivos .py en el directorio
                  for lambda_file in *.py; do
                    # Extrae el nombre de la función a partir del archivo
                    function_name=$(basename $lambda_file .py)
                    
                    # Verifica si la función Lambda ya existe en AWS
                    if aws lambda get-function --function-name $function_name > /dev/null 2>&1; then
                      echo "La función Lambda $function_name ya existe, no se crea de nuevo."
                    else
                      echo "Creando nueva función Lambda: $function_name"
                      # Verifica si el archivo ZIP existe antes de intentar usarlo
                      zip_file="../${function_name}.zip"
                      if [ -f "$zip_file" ]; then
                        # Crear la nueva función Lambda
                        aws lambda create-function \
                          --function-name $function_name \
                          --zip-file fileb://$zip_file \
                          --handler lambda_function.lambda_handler \
                          --runtime python3.10 \
                          --role arn:aws:iam::682033485736:role/service-role/git_hub_actions_test-role-4qk5fqjf \
                          --timeout 30 \
                          --memory-size 128
                      else
                        echo "Error: El archivo ZIP para $function_name no se encontró. No se puede crear la función Lambda."
                      fi
                    fi
                  done
              }
      
              # Verificar y crear funciones Lambda en los directorios 'src/trips' y 'src/routines'
              check_and_create_lambda "src/trips"
              check_and_create_lambda "src/routines"
      
      
    - name: Print changed files
      run: |
            echo "List of changed files:" 
            git diff --name-only HEAD^ HEAD
    - name: Find and Deploy Changed Lambda Functions
      run: |
            changed_lambdas=$(git diff --name-only HEAD^ HEAD | grep '^src/' | grep '\.py$' | uniq)
            echo "Changed Lambda Files: $changed_lambdas"
            
            for lambda_file in $changed_lambdas; do
              function_name=$(basename $lambda_file .py)  # Extrae el nombre del archivo como nombre de la lambda
              zip_file_name=${function_name}.zip
    
              echo "Changes detected in Lambda function: $function_name"
              # Navegar a la carpeta donde está el archivo
              file_dir=$(dirname $lambda_file)
              cd $file_dir
              zip -r ../../$zip_file_name .
              cd ../../
              # Desplegar la función Lambda
              aws lambda update-function-code --function-name $function_name --zip-file fileb://$zip_file_name
              rm $zip_file_name
            done
